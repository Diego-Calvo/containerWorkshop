name: Deploy Workshop Application

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME || 'workshop-rg' }}
  CONTAINER_REGISTRY_NAME: ${{ vars.CONTAINER_REGISTRY_NAME }}
  ENVIRONMENT_NAME: ${{ vars.ENVIRONMENT_NAME || 'workshop-env' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Azure Container Registry
      run: |
        az acr login --name ${{ env.CONTAINER_REGISTRY_NAME }}

    - name: Build and push frontend container
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-frontend:${{ github.sha }} \
                     -t ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-frontend:latest \
                     ./frontend
        docker push ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-frontend:${{ github.sha }}
        docker push ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-frontend:latest

    - name: Build and push backend container
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-backend:${{ github.sha }} \
                     -t ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-backend:latest \
                     ./backend
        docker push ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-backend:${{ github.sha }}
        docker push ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-backend:latest

    - name: Install Container Apps extension
      run: |
        az extension add --name containerapp --upgrade

    - name: Deploy backend container app
      run: |
        az containerapp update \
          --name workshop-backend \
          --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
          --image ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-backend:${{ github.sha }}

    - name: Deploy frontend container app
      run: |
        az containerapp update \
          --name workshop-frontend \
          --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
          --image ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/workshop-frontend:${{ github.sha }}

    - name: Get application URLs
      id: get-urls
      run: |
        FRONTEND_URL=$(az containerapp show --name workshop-frontend --resource-group ${{ env.RESOURCE_GROUP_NAME }} --query "properties.configuration.ingress.fqdn" -o tsv)
        BACKEND_URL=$(az containerapp show --name workshop-backend --resource-group ${{ env.RESOURCE_GROUP_NAME }} --query "properties.configuration.ingress.fqdn" -o tsv)
        echo "frontend-url=https://$FRONTEND_URL" >> $GITHUB_OUTPUT
        echo "backend-url=https://$BACKEND_URL" >> $GITHUB_OUTPUT

    - name: Test application health
      run: |
        sleep 30  # Wait for deployment to complete
        curl -f ${{ steps.get-urls.outputs.backend-url }}/health || exit 1
        echo "✅ Application deployed and healthy!"
        echo "Frontend: ${{ steps.get-urls.outputs.frontend-url }}"
        echo "Backend: ${{ steps.get-urls.outputs.backend-url }}"

    - name: Comment PR with deployment info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🚀 **Workshop Application Deployed!**
            
            📱 **Frontend:** ${{ steps.get-urls.outputs.frontend-url }}
            🔧 **Backend API:** ${{ steps.get-urls.outputs.backend-url }}
            🏥 **Health Check:** ${{ steps.get-urls.outputs.backend-url }}/health
            📊 **API Stats:** ${{ steps.get-urls.outputs.backend-url }}/api/stats
            
            **Commit:** ${context.sha.substring(0, 7)}
            **Workflow:** [${context.workflow}](${context.payload.pull_request.html_url}/checks)`
          });
